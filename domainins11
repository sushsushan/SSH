#!/bin/bash

# Define Colors
RED="\033[1;31m"
GREEN="\033[1;32m"
YELLOW="\033[1;33m"
BLUE="\033[1;34m"
CYAN="\033[1;36m"
WHITE="\033[1;37m"
RESET="\033[0m"

# Run the command and store output
OUTPUT=$(uapi DomainInfo domains_data)

# Column Widths - Ensures Proper Alignment
DOMAIN_WIDTH=40
ROOT_WIDTH=50
TYPE_WIDTH=15

# Arrays to store domains in order: Primary → Parked → Addon → Subdomains
primary_domains=()
parked_domains=()
addon_domains=()
sub_domains=()

declare -A domain_map docroot_map type_map

# Parse Data
current_domain=""
while read -r line; do
    if [[ $line =~ "domain:" ]]; then
        current_domain=$(echo "$line" | awk '{print $2}')
    elif [[ $line =~ "documentroot:" ]]; then
        docroot_map["$current_domain"]=$(echo "$line" | awk '{print $2}')
    elif [[ $line =~ "type:" ]]; then
        domain_type=$(echo "$line" | awk '{print $2}')
        type_map["$current_domain"]=$domain_type

        # Categorize domain type
        case $domain_type in
            "main_domain") primary_domains+=("$current_domain") ;;
            "parked_domain") parked_domains+=("$current_domain") ;;
            "addon_domain") addon_domains+=("$current_domain") ;;
            "sub_domain") sub_domains+=("$current_domain") ;;
        esac
    fi
done <<< "$OUTPUT"

# Function to Print Domains in Proper Order
print_domains() {
    local domains=("$@")
    for domain in "${domains[@]}"; do
        local type="${type_map[$domain]}"
        local docroot="${docroot_map[$domain]}"
        
        # Assign Colors Based on Type
        case $type in
            "main_domain") type_color=$GREEN ;;
            "parked_domain") type_color=$RED ;;
            "addon_domain") type_color=$YELLOW ;;
            "sub_domain") type_color=$BLUE ;;
        esac
        
        # Print Table Row with Proper Alignment
        printf "| %-${DOMAIN_WIDTH}s | %-${ROOT_WIDTH}s | ${type_color}%-${TYPE_WIDTH}s${RESET} |\n" "$domain" "$docroot" "$type"
    done
}

# Print Table Header
printf "${WHITE}%-${DOMAIN_WIDTH}s %-${ROOT_WIDTH}s %-${TYPE_WIDTH}s${RESET}\n" "-------------------------------------------------" "--------------------------------------------------" "----------------"
printf "| ${CYAN}%-${DOMAIN_WIDTH}s${RESET} | ${CYAN}%-${ROOT_WIDTH}s${RESET} | ${CYAN}%-${TYPE_WIDTH}s${RESET} |\n" "Domain Name" "Document Root" "Type"
printf "${WHITE}%-${DOMAIN_WIDTH}s %-${ROOT_WIDTH}s %-${TYPE_WIDTH}s${RESET}\n" "-------------------------------------------------" "--------------------------------------------------" "----------------"

# Print Domains in Required Order
print_domains "${primary_domains[@]}"
print_domains "${parked_domains[@]}"
print_domains "${addon_domains[@]}"
print_domains "${sub_domains[@]}"

# Print Table Footer
printf "${WHITE}%-${DOMAIN_WIDTH}s %-${ROOT_WIDTH}s %-${TYPE_WIDTH}s${RESET}\n" "-------------------------------------------------" "--------------------------------------------------" "----------------"

# Print Summary with Colors
echo -e "${CYAN}Total Domains:${RESET} ${WHITE}$((${#primary_domains[@]} + ${#parked_domains[@]} + ${#addon_domains[@]} + ${#sub_domains[@]}))${RESET}"
echo -e "${GREEN}Primary Domains:${RESET} ${WHITE}${#primary_domains[@]}${RESET}"
echo -e "${RED}Parked Domains:${RESET} ${WHITE}${#parked_domains[@]}${RESET}"
echo -e "${YELLOW}Addon Domains:${RESET} ${WHITE}${#addon_domains[@]}${RESET}"
echo -e "${BLUE}Subdomains:${RESET} ${WHITE}${#sub_domains[@]}${RESET}"
