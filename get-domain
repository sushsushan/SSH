#!/bin/bash

# Prompt the user for the domain name
read -p "Enter the domain name: " DOMAIN_NAME

# Check if input is empty
if [ -z "$DOMAIN_NAME" ]; then
    echo "Error: No domain name provided."
    exit 1
fi

# Fetch domain information from cPanel UAPI
DOMAIN_INFO=$(uapi DomainInfo domains_data)

# Extract the exact block for the provided domain (not similar or alias)
DOMAIN_BLOCK=$(echo "$DOMAIN_INFO" | awk -v domain="$DOMAIN_NAME" '
    BEGIN { found=0 }
    $0 ~ "^ *domain: " domain "$" { found=1 }
    found && NF==0 { exit }
    found { print }
')

# Check if an exact match was found
if [ -z "$DOMAIN_BLOCK" ]; then
    echo "Error: Domain '$DOMAIN_NAME' not found."
    exit 1
fi

# Extract specific details (ensuring only a single value is taken)
DOCUMENT_ROOT=$(echo "$DOMAIN_BLOCK" | awk -F': ' '/documentroot:/ {print $2; exit}' | xargs)
HOMEDIR=$(echo "$DOMAIN_BLOCK" | awk -F': ' '/homedir:/ {print $2; exit}' | xargs)
IP=$(echo "$DOMAIN_BLOCK" | awk -F': ' '/ip:/ {print $2; exit}' | xargs)
TYPE=$(echo "$DOMAIN_BLOCK" | awk -F': ' '/type:/ {print $2; exit}' | xargs)
USER=$(echo "$DOMAIN_BLOCK" | awk -F': ' '/user:/ {print $2; exit}' | xargs)

# Debug extracted data
echo "-------------------------"
echo "Extracted Document Root: '$DOCUMENT_ROOT'"
echo "Domain: $DOMAIN_NAME"
echo "Home Directory: $HOMEDIR"
echo "IP Address: $IP"
echo "Type: $TYPE"
echo "User: $USER"
echo "-------------------------"

# Check if the document root exists before listing contents
if [ -d "$DOCUMENT_ROOT" ]; then
    echo "Directory exists: $DOCUMENT_ROOT"
    ls -lah "$DOCUMENT_ROOT"
else
    echo "Error: Document root directory does not exist or is not accessible."
    echo "Check cPanel settings or verify directory permissions."
    exit 1
fi
