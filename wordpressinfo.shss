#!/bin/bash

# Prompt user to enter the WordPress directory
read -p "Enter the full path to your WordPress installation: " WP_PATH

# Check if the input is empty
if [ -z "$WP_PATH" ]; then
    echo "Error: No path entered. Please provide a valid WordPress directory."
    exit 1
fi

# Verify if wp-config.php exists (confirming it's a WordPress installation)
if [ ! -f "$WP_PATH/wp-config.php" ]; then
    echo "Error: No WordPress installation found at $WP_PATH"
    exit 1
fi

# Navigate to the WordPress directory
cd "$WP_PATH" || exit

echo "=================================="
echo " WordPress Site Full Details "
echo "=================================="

# General Info
echo "WordPress Version: $(wp core version --allow-root)"
echo "Site URL: $(wp option get siteurl --allow-root)"
echo "Home URL: $(wp option get home --allow-root)"

# Database Info
echo "Database Name: $(wp config get DB_NAME --allow-root)"
echo "Database User: $(wp config get DB_USER --allow-root)"
echo "Database Host: $(wp config get DB_HOST --allow-root)"
echo "Table Prefix: $(wp config get table_prefix --allow-root)"

# Active Theme
echo "Active Theme: $(wp theme list --status=active --allow-root)"

# Installed Plugins
echo "Installed Plugins:"
wp plugin list --allow-root

# User List with Roles
echo "Users and Roles:"
wp user list --fields=ID,user_login,display_name,role --allow-root

# Post & Page Counts
echo "Total Posts: $(wp post list --post_type=post --format=count --allow-root)"
echo "Total Pages: $(wp post list --post_type=page --format=count --allow-root)"
echo "Total Drafts: $(wp post list --post_status=draft --format=count --allow-root)"

# Media Library Info
echo "Total Media Files: $(wp media list --format=count --allow-root)"

# WP Cron Jobs
echo "Scheduled Cron Jobs:"
wp cron event list --allow-root

# Permalink Structure
echo "Permalink Structure: $(wp option get permalink_structure --allow-root)"

# WP Debug Mode
DEBUG_MODE=$(wp config get WP_DEBUG --allow-root 2>/dev/null)
if [ "$DEBUG_MODE" == "true" ]; then
    echo "WP Debug Mode: Enabled"
else
    echo "WP Debug Mode: Disabled"
fi

# Email Configuration
echo "Admin Email: $(wp option get admin_email --allow-root)"

# Site Health Status
echo "WordPress Site Health Info:"
wp site health status --fields=status,description --allow-root

# Security Check: File Permissions
echo "Checking File Permissions..."
find . -type d -exec chmod 755 {} \;
find . -type f -exec chmod 644 {} \;
echo "File Permissions Fixed."

echo "=================================="
echo " Mega WordPress Site Info Completed!"
echo "=================================="
