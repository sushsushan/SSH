#!/bin/bash

# Get the home directory of the current user
USER_HOME=$(eval echo ~$USER)

# Configurable Directories to scan (You can add more directories you have access to)
SCAN_DIRS=("$USER_HOME" "/var/www" "/public_html" "/tmp" "/var/tmp")

# Malware signature patterns (Common PHP malware signatures, you can add more)
MALWARE_PATTERNS=("base64_decode" "eval(" "exec(" "system(" "shell_exec(" "phpinfo(" "document.write" "/tmp/" "/var/tmp/" "phar://" "file_get_contents" "passthru(" "fwrite(" "str_rot13")

# Log file for storing results (Logs will be saved in the user's home directory)
LOG_FILE="$USER_HOME/malware_scan.log"
DATE=$(date '+%Y-%m-%d %H:%M:%S')

# Function to scan files for suspicious patterns
scan_files_for_patterns() {
    echo "[$DATE] Scanning for suspicious patterns..." >> "$LOG_FILE"
    for dir in "${SCAN_DIRS[@]}"; do
        if [ -d "$dir" ]; then
            echo "[$DATE] Scanning directory: $dir" >> "$LOG_FILE"
            for pattern in "${MALWARE_PATTERNS[@]}"; do
                grep -r -l "$pattern" "$dir" >> "$LOG_FILE"
            done
        else
            echo "[$DATE] Directory not found: $dir" >> "$LOG_FILE"
        fi
    done
}

# Function to check file permissions for abnormalities in the accessible directories
check_permissions() {
    echo "[$DATE] Checking file permissions..." >> "$LOG_FILE"
    find $USER_HOME -type f \( -perm -0777 -or -perm -0666 \) -exec ls -l {} \; >> "$LOG_FILE"
    find $USER_HOME -type d \( -perm -0777 \) -exec ls -ld {} \; >> "$LOG_FILE"
}

# Function to check for large files (possible hidden scripts)
check_large_files() {
    echo "[$DATE] Checking for unusually large files..." >> "$LOG_FILE"
    find $USER_HOME -type f -size +5M -exec ls -lh {} \; >> "$LOG_FILE"
}

# Function to check for cron jobs (User-level cron jobs)
check_cron_jobs() {
    echo "[$DATE] Checking for user cron jobs..." >> "$LOG_FILE"
    crontab -l >> "$LOG_FILE" 2>&1
}

# Function to check for suspicious file modifications (recent modifications)
check_file_modifications() {
    echo "[$DATE] Checking for recently modified files..." >> "$LOG_FILE"
    find $USER_HOME -type f -mtime -7 -exec ls -l {} \; >> "$LOG_FILE"
}

# Function to scan for known malware signatures (using ClamAV or custom rules)
scan_for_malware_signatures() {
    echo "[$DATE] Scanning for malware signatures..." >> "$LOG_FILE"
    if command -v clamscan > /dev/null 2>&1; then
        clamscan -r $USER_HOME >> "$LOG_FILE"
    else
        echo "[$DATE] clamscan not installed. Skipping signature-based malware scan." >> "$LOG_FILE"
    fi
}

# Main function that runs all checks
main() {
    echo "[$DATE] Starting user-level malware scan..." >> "$LOG_FILE"
    
    # Call all functions to perform scans and checks
    scan_files_for_patterns
    check_permissions
    check_large_files
    check_cron_jobs
    check_file_modifications
    scan_for_malware_signatures

    echo "[$DATE] Malware scan completed." >> "$LOG_FILE"
}

# Execute the main function
main
