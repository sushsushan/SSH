#!/bin/bash

# Fetch available databases
echo "Fetching available databases..."
uapi Mysql list_databases | grep -oP '(?<=database:\s).+'
read -p "Enter database name: " DB_NAME

# Generate temporary DB user and password
DB_USER="$(whoami)_$(openssl rand -hex 4)"
DB_PASS=$(openssl rand -base64 12)

# Create the temporary database user
uapi Mysql create_user name="$DB_USER" password="$DB_PASS" >/dev/null 2>&1
uapi Mysql set_privileges_on_database database="$DB_NAME" user="$DB_USER" privileges="ALL PRIVILEGES" >/dev/null 2>&1

# Function to execute MySQL queries safely
execute_query() {
    mysql -u "$DB_USER" -p"$DB_PASS" -D "$DB_NAME" -se "$1"
}

# Detect table prefix dynamically (Fix for full database.table_name issue)
TABLE_PREFIX=$(execute_query "SELECT table_name FROM information_schema.tables WHERE table_schema='$DB_NAME' AND table_name LIKE '%\_options' LIMIT 1;" | sed -E 's/_options$//')

if [[ -z "$TABLE_PREFIX" ]]; then
    echo "Error: Unable to determine the correct table prefix. Exiting..."
    uapi Mysql delete_user name="$DB_USER" >/dev/null 2>&1
    exit 1
fi

echo "Detected Table Prefix: ${TABLE_PREFIX}_"

# Display table sizes before optimization
echo "Table sizes before optimization:"
execute_query "SELECT TABLE_NAME, ROUND((DATA_LENGTH + INDEX_LENGTH) / 1024 / 1024, 2) AS Size_MB FROM information_schema.TABLES WHERE TABLE_SCHEMA='$DB_NAME' AND TABLE_NAME LIKE '${TABLE_PREFIX}_%' ORDER BY Size_MB DESC;"

# Optimize all prefixed tables
echo "Optimizing tables..."
execute_query "OPTIMIZE TABLE $(execute_query "SHOW TABLES LIKE '${TABLE_PREFIX}_%'" | awk '{print $1}' | tr '\n' ',' | sed 's/,$//');"

# Repair all prefixed tables
echo "Repairing tables..."
execute_query "REPAIR TABLE $(execute_query "SHOW TABLES LIKE '${TABLE_PREFIX}_%'" | awk '{print $1}' | tr '\n' ',' | sed 's/,$//');"

# Remove old cached data (for CMS like WordPress)
echo "Removing cached data..."
execute_query "DELETE FROM ${TABLE_PREFIX}_options WHERE autoload='no';"
execute_query "DELETE FROM ${TABLE_PREFIX}_transient WHERE expire < UNIX_TIMESTAMP();"
execute_query "DELETE FROM ${TABLE_PREFIX}_session WHERE session_expiry < UNIX_TIMESTAMP();"

# Purge orphaned data (Modify based on your database structure)
echo "Removing orphaned data..."
execute_query "DELETE FROM ${TABLE_PREFIX}_posts WHERE post_type='revision' AND post_date < NOW() - INTERVAL 90 DAY;"
execute_query "DELETE FROM ${TABLE_PREFIX}_comments WHERE comment_approved='spam';"

# Display table sizes after optimization
echo "Table sizes after optimization:"
execute_query "SELECT TABLE_NAME, ROUND((DATA_LENGTH + INDEX_LENGTH) / 1024 / 1024, 2) AS Size_MB FROM information_schema.TABLES WHERE TABLE_SCHEMA='$DB_NAME' AND TABLE_NAME LIKE '${TABLE_PREFIX}_%' ORDER BY Size_MB DESC;"

# Delete temporary DB user
uapi Mysql delete_user name="$DB_USER" >/dev/null 2>&1

echo "Database optimization completed successfully!"
